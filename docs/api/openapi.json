{
  "openapi": "3.0.3",
  "info": {
    "title": "AI FileSystem MCP API",
    "version": "2.0.0",
    "description": "AI-optimized Model Context Protocol server for intelligent file system operations with 39 commands across 6 categories."
  },
  "servers": [
    {
      "url": "mcp://ai-filesystem",
      "description": "MCP Server"
    }
  ],
  "paths": {
    "/read_file": {
      "post": {
        "summary": "Read the contents of a file",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file to read"
                  },
                  "encoding": {
                    "type": "string",
                    "description": "File encoding (default: utf-8)"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/write_file": {
      "post": {
        "summary": "Write content to a file",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path where to write the file"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content to write"
                  },
                  "createDirectories": {
                    "type": "boolean",
                    "description": "Create parent directories if needed"
                  }
                },
                "required": [
                  "path",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/read_files": {
      "post": {
        "summary": "Read multiple files in a single operation",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "description": "Array of file paths to read"
                  },
                  "encoding": {
                    "type": "string",
                    "description": "File encoding for all files"
                  }
                },
                "required": [
                  "paths"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/update_file": {
      "post": {
        "summary": "Update specific parts of a file using find-and-replace",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file to update"
                  },
                  "changes": {
                    "type": "array",
                    "description": "Array of change objects with oldText and newText"
                  },
                  "backup": {
                    "type": "boolean",
                    "description": "Create backup before updating"
                  }
                },
                "required": [
                  "path",
                  "changes"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/move_file": {
      "post": {
        "summary": "Move or rename a file",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourcePath": {
                    "type": "string",
                    "description": "Current file path"
                  },
                  "destinationPath": {
                    "type": "string",
                    "description": "New file path"
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Overwrite destination if exists"
                  }
                },
                "required": [
                  "sourcePath",
                  "destinationPath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/copy_file": {
      "post": {
        "summary": "Copy a file to a new location",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourcePath": {
                    "type": "string",
                    "description": "Source file path"
                  },
                  "destinationPath": {
                    "type": "string",
                    "description": "Destination file path"
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Overwrite destination if exists"
                  }
                },
                "required": [
                  "sourcePath",
                  "destinationPath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/delete_file": {
      "post": {
        "summary": "Delete a file",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file to delete"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force deletion without prompts"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/get_file_metadata": {
      "post": {
        "summary": "Get detailed metadata about a file",
        "tags": [
          "File Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/create_directory": {
      "post": {
        "summary": "Create a directory and its parent directories if needed",
        "tags": [
          "Directory Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Directory path to create"
                  },
                  "recursive": {
                    "type": "boolean",
                    "description": "Create parent directories"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/list_directory": {
      "post": {
        "summary": "List contents of a directory",
        "tags": [
          "Directory Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Directory path to list"
                  },
                  "recursive": {
                    "type": "boolean",
                    "description": "Include subdirectories"
                  },
                  "includeHidden": {
                    "type": "boolean",
                    "description": "Include hidden files"
                  },
                  "details": {
                    "type": "boolean",
                    "description": "Include file details"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/remove_directory": {
      "post": {
        "summary": "Remove a directory and optionally its contents",
        "tags": [
          "Directory Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Directory path to remove"
                  },
                  "recursive": {
                    "type": "boolean",
                    "description": "Remove contents recursively"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force removal without prompts"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/search_files": {
      "post": {
        "summary": "Search for files by name pattern",
        "tags": [
          "Search Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "description": "Search pattern (supports glob patterns)"
                  },
                  "path": {
                    "type": "string",
                    "description": "Directory to search in"
                  },
                  "recursive": {
                    "type": "boolean",
                    "description": "Search subdirectories"
                  },
                  "caseSensitive": {
                    "type": "boolean",
                    "description": "Case-sensitive search"
                  }
                },
                "required": [
                  "pattern"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/search_content": {
      "post": {
        "summary": "Search for content within files",
        "tags": [
          "Search Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Search query"
                  },
                  "path": {
                    "type": "string",
                    "description": "Directory to search in"
                  },
                  "filePattern": {
                    "type": "string",
                    "description": "Limit search to files matching pattern"
                  },
                  "useRegex": {
                    "type": "boolean",
                    "description": "Treat query as regular expression"
                  },
                  "caseSensitive": {
                    "type": "boolean",
                    "description": "Case-sensitive search"
                  }
                },
                "required": [
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/fuzzy_search": {
      "post": {
        "summary": "Perform fuzzy search for files and content",
        "tags": [
          "Search Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Fuzzy search query"
                  },
                  "path": {
                    "type": "string",
                    "description": "Directory to search in"
                  },
                  "threshold": {
                    "type": "number",
                    "description": "Similarity threshold (0-1)"
                  }
                },
                "required": [
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/semantic_search": {
      "post": {
        "summary": "AI-powered semantic search for code and content",
        "tags": [
          "Search Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Semantic search query"
                  },
                  "path": {
                    "type": "string",
                    "description": "Directory to search in"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language context"
                  }
                },
                "required": [
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_status": {
      "post": {
        "summary": "Get the status of a Git repository",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_add": {
      "post": {
        "summary": "Stage files for commit",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "files": {
                    "type": "array",
                    "description": "Files to stage"
                  }
                },
                "required": [
                  "files"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_commit": {
      "post": {
        "summary": "Create a Git commit",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "message": {
                    "type": "string",
                    "description": "Commit message"
                  },
                  "author": {
                    "type": "object",
                    "description": "Author information"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_push": {
      "post": {
        "summary": "Push commits to remote repository",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "remote": {
                    "type": "string",
                    "description": "Remote name"
                  },
                  "branch": {
                    "type": "string",
                    "description": "Branch to push"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_pull": {
      "post": {
        "summary": "Pull changes from remote repository",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "remote": {
                    "type": "string",
                    "description": "Remote name"
                  },
                  "branch": {
                    "type": "string",
                    "description": "Branch to pull"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_branch": {
      "post": {
        "summary": "List, create, or switch Git branches",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "action": {
                    "type": "string",
                    "description": "Action: list, create, or switch"
                  },
                  "branchName": {
                    "type": "string",
                    "description": "Branch name for create/switch"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_log": {
      "post": {
        "summary": "Get Git commit history",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "limit": {
                    "type": "number",
                    "description": "Number of commits to retrieve"
                  },
                  "format": {
                    "type": "string",
                    "description": "Log format"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_diff": {
      "post": {
        "summary": "Show differences between commits, branches, or files",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "target1": {
                    "type": "string",
                    "description": "First target for comparison"
                  },
                  "target2": {
                    "type": "string",
                    "description": "Second target for comparison"
                  },
                  "filePath": {
                    "type": "string",
                    "description": "Specific file to diff"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_merge": {
      "post": {
        "summary": "Merge branches in Git",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "sourceBranch": {
                    "type": "string",
                    "description": "Branch to merge from"
                  },
                  "strategy": {
                    "type": "string",
                    "description": "Merge strategy"
                  }
                },
                "required": [
                  "sourceBranch"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/git_reset": {
      "post": {
        "summary": "Reset Git repository state",
        "tags": [
          "Git Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repositoryPath": {
                    "type": "string",
                    "description": "Path to Git repository"
                  },
                  "mode": {
                    "type": "string",
                    "description": "Reset mode: soft, mixed, hard"
                  },
                  "target": {
                    "type": "string",
                    "description": "Target commit"
                  }
                },
                "required": [
                  "mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/analyze_code": {
      "post": {
        "summary": "Analyze code structure and metrics",
        "tags": [
          "Code Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to analyze"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language"
                  },
                  "includeMetrics": {
                    "type": "boolean",
                    "description": "Include complexity metrics"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/suggest_refactoring": {
      "post": {
        "summary": "Get AI-powered refactoring suggestions",
        "tags": [
          "Code Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to analyze"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language"
                  },
                  "focus": {
                    "type": "string",
                    "description": "Specific area to focus on"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/modify_code": {
      "post": {
        "summary": "Apply code modifications based on instructions",
        "tags": [
          "Code Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file"
                  },
                  "modifications": {
                    "type": "array",
                    "description": "Array of modification instructions"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language"
                  }
                },
                "required": [
                  "path",
                  "modifications"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/format_code": {
      "post": {
        "summary": "Format code according to language standards",
        "tags": [
          "Code Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file to format"
                  },
                  "language": {
                    "type": "string",
                    "description": "Programming language"
                  },
                  "style": {
                    "type": "object",
                    "description": "Formatting style options"
                  }
                },
                "required": [
                  "path",
                  "language"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/encrypt_file": {
      "post": {
        "summary": "Encrypt a file using AES encryption",
        "tags": [
          "Security Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to the file to encrypt"
                  },
                  "password": {
                    "type": "string",
                    "description": "Encryption password"
                  },
                  "outputPath": {
                    "type": "string",
                    "description": "Output path for encrypted file"
                  }
                },
                "required": [
                  "path",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/decrypt_file": {
      "post": {
        "summary": "Decrypt an encrypted file",
        "tags": [
          "Security Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to encrypted file"
                  },
                  "password": {
                    "type": "string",
                    "description": "Decryption password"
                  },
                  "outputPath": {
                    "type": "string",
                    "description": "Output path for decrypted file"
                  }
                },
                "required": [
                  "path",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/scan_secrets": {
      "post": {
        "summary": "Scan for potentially sensitive information in code",
        "tags": [
          "Security Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to scan"
                  },
                  "recursive": {
                    "type": "boolean",
                    "description": "Scan subdirectories"
                  },
                  "patterns": {
                    "type": "array",
                    "description": "Custom patterns to look for"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/security_audit": {
      "post": {
        "summary": "Perform a comprehensive security audit",
        "tags": [
          "Security Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to audit"
                  },
                  "includeDependencies": {
                    "type": "boolean",
                    "description": "Include dependency audit"
                  },
                  "reportFormat": {
                    "type": "string",
                    "description": "Report format"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/execute_shell": {
      "post": {
        "summary": "Execute shell commands with security restrictions",
        "tags": [
          "Security Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "Shell command to execute"
                  },
                  "workingDirectory": {
                    "type": "string",
                    "description": "Working directory"
                  },
                  "timeout": {
                    "type": "number",
                    "description": "Command timeout in milliseconds"
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/diff_files": {
      "post": {
        "summary": "Compare two files and show differences",
        "tags": [
          "Utility Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file1": {
                    "type": "string",
                    "description": "First file path"
                  },
                  "file2": {
                    "type": "string",
                    "description": "Second file path"
                  },
                  "format": {
                    "type": "string",
                    "description": "Diff format"
                  }
                },
                "required": [
                  "file1",
                  "file2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/compress_files": {
      "post": {
        "summary": "Compress files or directories into an archive",
        "tags": [
          "Utility Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "description": "Paths to compress"
                  },
                  "outputPath": {
                    "type": "string",
                    "description": "Output archive path"
                  },
                  "format": {
                    "type": "string",
                    "description": "Archive format"
                  }
                },
                "required": [
                  "paths",
                  "outputPath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/extract_archive": {
      "post": {
        "summary": "Extract files from an archive",
        "tags": [
          "Utility Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "archivePath": {
                    "type": "string",
                    "description": "Path to archive file"
                  },
                  "outputPath": {
                    "type": "string",
                    "description": "Directory to extract to"
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "Overwrite existing files"
                  }
                },
                "required": [
                  "archivePath",
                  "outputPath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/watch_files": {
      "post": {
        "summary": "Watch files or directories for changes",
        "tags": [
          "Utility Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "type": "array",
                    "description": "Paths to watch"
                  },
                  "events": {
                    "type": "array",
                    "description": "Events to watch for"
                  },
                  "callback": {
                    "type": "string",
                    "description": "Callback command to execute"
                  }
                },
                "required": [
                  "paths"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/get_system_info": {
      "post": {
        "summary": "Get system information and metrics",
        "tags": [
          "Utility Operations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "includeMetrics": {
                    "type": "boolean",
                    "description": "Include performance metrics"
                  },
                  "includeProcesses": {
                    "type": "boolean",
                    "description": "Include process information"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommandResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}